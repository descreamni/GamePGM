Unity Documentation 주요 클래스 및 항목



이 문서는 Unity 엔진에서 자주 사용되는 주요 클래스와 항목에 대해 설명합니다. 각 클래스의 개요와 주요 속성 및 메서드를 통해 Unity 개발에 필요한 기본적인 이해를 돕고자 합니다. 게임 오브젝트부터 디버깅 도구까지 다양한 요소를 다루며, Unity의 기능을 효과적으로 활용하는 방법을 제시합니다.



게임 오브젝트 (GameObject)



개요

Unity에서 모든 객체의 기본 단위인 GameObject는 게임 내에서 모든 요소를 나타내는 핵심 구성 요소입니다.



속성 및 메서드





주요 속성:





name: 게임 오브젝트의 이름을 설정하거나 가져옵니다.



tag: 오브젝트에 태그를 부여하여 그룹화할 수 있습니다.



activeSelf: 오브젝트의 활성 상태를 확인합니다.



메서드 활용 예시:





SetActive(bool): 오브젝트의 활성화 또는 비활성화를 설정합니다.



AddComponent<T>(): 지정된 타입의 컴포넌트를 추가합니다.



MonoBehaviour



개요

Unity에서 스크립트를 작성할 때 사용하는 기본 클래스인 MonoBehaviour는 게임 오브젝트의 행동을 정의합니다.



생명주기 메서드





Awake(): 스크립트 인스턴스가 로드될 때 호출됩니다.



Start(): 첫 번째 프레임 업데이트 전에 호출됩니다.



Update(): 매 프레임마다 호출되어 게임 로직을 처리합니다.



오브젝트 (Object)



개요

UnityEngine.Object는 모든 Unity 엔진 객체의 기반 클래스입니다.



주요 메서드





Instantiate(): 오브젝트를 생성합니다.



Destroy(): 오브젝트를 삭제합니다.



트랜스폼 (Transform)



설명

게임 오브젝트의 위치, 회전, 크기를 제어하는 클래스입니다.



주요 속성 및 메서드





position: 오브젝트의 월드 좌표를 설정하거나 가져옵니다.



rotation: 오브젝트의 회전을 설정하거나 가져옵니다.



localScale: 오브젝트의 크기를 설정합니다.



벡터 (Vector)



개요

Vector2, Vector3 등 위치, 방향, 크기를 나타내는 클래스입니다.



사용 예시





벡터 연산:






Vector3.Lerp(): 두 벡터 사이의 선형 보간을 수행합니다.



Vector3.Normalize(): 벡터를 정규화합니다.



쿼터니언 (Quaternion)



개요

3D 회전을 나타내는 방식으로, 회전 각도를 회전 축과 함께 표현합니다.



주요 메서드





Quaternion.Euler(): 오일러 각을 쿼터니언으로 변환합니다.



Quaternion.Lerp(): 두 쿼터니언 사이의 선형 보간을 수행합니다.



ScriptableObject



설명

데이터 저장과 공유를 위한 스크립터블 오브젝트입니다.



활용 예시

게임 내 설정, 캐릭터 스탯 등 데이터를 유지 및 관리하는 데 사용됩니다.



시간 (Time)



개요

Time.deltaTime, Time.timeScale 등을 통해 게임 시간 조절을 가능하게 합니다.



주요 속성

프레임 독립적 움직임 구현을 위한 시간 제어 방법을 제공합니다.



Mathf



설명

수학적 계산에 사용하는 유틸리티 클래스입니다.



주요 메서드





Mathf.Clamp(): 값을 특정 범위로 제한합니다.



Mathf.Lerp(): 두 값 사이의 선형 보간을 수행합니다.



Mathf.Sin(): 사인 함수를 계산합니다.



무작위 (Random)



개요

난수 생성 기능을 제공합니다.



주요 메서드





Random.Range(): 지정된 범위 내에서 난수를 생성합니다.



Random.value: 0과 1 사이의 난수를 생성합니다.



디버그 (Debug)



설명

디버깅을 위한 클래스입니다.



주요 메서드





Debug.Log(): 메시지를 콘솔에 출력합니다.



Debug.Assert(): 조건이 false일 경우 오류 메시지를 출력합니다.



Debug.DrawLine(): 두 점 사이에 선을 그립니다.



기즈모 및 핸들 (Gizmos and Handles)



개요

게임 오브젝트의 시각적 디버깅 및 편집기 내 표시를 위한 도구입니다.



주요 기능





Gizmos.DrawLine(): 두 점 사이에 선을 그려 시각적 정보를 제공합니다.



Handles.color: 핸들의 색상을 설정합니다.



이 문서를 통해 Unity의 주요 클래스와 메서드를 이해하고, 게임 개발에 필요한 기초 지식을 쌓을 수 있기를 바랍니다.