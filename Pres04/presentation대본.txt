Slide 1: Unity 개요
안녕하세요. 오늘은 Unity에 대해 소개하겠습니다. Unity는 크로스 플랫폼 게임 엔진으로, 다양한 플랫폼을 지원하며 C# 프로그래밍, 비주얼 스크립팅, 에셋 스토어 등 다양한 기능을 제공합니다. 이러한 기능을 통해 개발자들이 게임을 쉽게 개발할 수 있도록 돕는 강력한 도구입니다?(AIOPack).

Slide 2: Unity의 주요 기능
Unity의 주요 기능은 C# 프로그래밍, 비주얼 스크립팅, 그리고 에셋 스토어입니다. 또한 여기서는 적혀있지 않지만 크로스 플랫폼을 지원하여 다양한 환경에서 게임을 배포할 수 있도록 만들었습니다.

C# 프로그래밍을 통해 직관적인 스크립팅을 제공하며, 개발자가 다양한 게임 로직을 쉽게 구현할 수 있도록 돕습니다. 타 엔진 (Unreal Engine의 C++, 소스 엔진, 크라이엔진 등의 엔진들과 비교해봐도 직관적인 프로그래밍이 가능합니다.)
비주얼 스크립팅은 프로그래밍 경험이 적은 사용자도 간단하게 게임을 제작할 수 있게 해주어 빠른 프로토타이핑에 유용합니다.
에셋 스토어에서는 다양한 리소스를 제공하여 개발자들이 보다 편리하게 게임 애셋을 사용할 수 있도록 지원해줍니다.
Slide 3: GameObject와 MonoBehaviour
Unity의 모든 오브젝트는 GameObject로 구성됩니다. GameObject는 이름, 태그, 활성화 상태 등을 설정할 수 있는 오브젝트의 기본 단위입니다. 체크박스를 이용하여 활성화 여부, 정적 오브젝트 여부를 설정해줄 수 있습니다.
 MonoBehaviour는 GameObject의 행동을 정의하는 기본 클래스입니다.
위 클래스는 다양한 생명주기 메서드를 지원하고, 대표적으로 Awake(), Start(), **Update()**가 있으며, 이 메서드를 통해 오브젝트의 초기화 및 매 프레임마다 실행되는 게임 로직을 설정할 수 있습니다?(AIOPack).

Slide 4: Transform과 Vector
Transform은 게임 오브젝트의 위치(position), 회전(rotation), 크기(size)를 제어하며, 각 오브젝트가 공간 상에서 어디에 위치하는지를 정의하는 가장 기본적인 요소입니다.
 Vector 클래스는 위치와 방향을 나타내는 도구로, 선형 보간과 정규화 기능을 제공하여 오브젝트 간의 자연스러운 움직임을 구현할 수 있도록 지원합니다. 이 두 클래스는 게임 오브젝트의 시각적 배치와 이동을 담당하는 중요한 요소입니다?(AIOPack).

Slide 5: Unity의 유용한 클래스들
이 외에도 다음과 같은 클래스들이 자주 사용되곤 합니다.
Time: 프레임당 장면을 제어하거나 시간, 속도 등을 조절하게 하는 함수입니다.
Mathf: 수학 유틸리티입니다. java나 python 의 math 모듈과 유사합니다.
Random: 난수를 생성하는 클래스이고, Debug는 콘솔에 메시지를 출력하여 디버깅을 하거나 예외 처리 시에 사용되는 기능이라고 보시면 됩니다.
Slide 6: Unity의 컴포넌트 시스템
Unity에서는 게임 오브젝트에 다양한 컴포넌트를 추가하여 기능을 확장시킬 수 있습니다.

게임 오브젝트는 Unity의 모든 요소의 기본 단위이며, 여기에 컴포넌트를 통해 기능과 속성을 부여합니다. 각 게임 오브젝트는 오브젝트의 특성에 맞는 고유한 컴포넌트들을 지닙니다. 예를 들면 ui 오브젝트는 다른 물체 오브젝트들과는 다른 Canvas라는 컴포넌트를 가지는 것처럼 말입니다.
이러한 컴포넌트의 조합을 통해 복잡한 동작을 구현하고, 다양한 기능을 가진 오브젝트를 만들 수 있습니다?(AIOPack).
Slide 7: Unity의 주요 컴포넌트
Unity에서 자주 사용되는 주요 컴포넌트들입니다.

Transform: 위치, 회전, 크기를 설정합니다.
Rigidbody: 물리 시뮬레이션을 적용하여 중력이나 충돌 효과를 구현합니다.
Mesh Renderer: 3D 모델의 외관을 구성하고, Camera는 게임 화면을 구성하며, Light는 조명을 설정해 게임의 분위기를 조절합니다. 이 외에도 Event System, NavMeshAgent, terrain 등의 다양한 분야의 컴포넌트들이 준비되어있습니다
Slide 8: Unity의 렌더 파이프라인
Unity는 빌트인 렌더 파이프라인, 유니버설 렌더 파이프라인 (URP), 고해상도 렌더 파이프라인 (HDRP) 등 다양한 렌더 파이프라인을 지원합니다.

빌트인 렌더 파이프라인은 다양한 렌더링 경로를 지원하는 기본 시스템이며, URP는 모바일부터 고사양 콘솔까지 폭넓은 플랫폼에서 최적화된 성능을 제공합니다. 
HDRP는 고사양 플랫폼을 위한 고품질 그래픽을 제공하여 현실감 넘치는 비주얼을 구현할 수 있습니다. 프로젝트의 요구에 맞게 렌더 파이프라인을 선택하는 것이 중요합니다?(AIOPack).빌트인 렌더 파이프라인을 제외한 나머지 파이프라인은 Scriptable Render pipeline으로 구축된 라이브러리라고 할 수 있습니다.Scriptable render pipeline은 스크립트로 제작된 렌더 파이프라인을 의미하는데 즉, 여러분도 능력이 되신다면 자신만의 렌더 파이프라인을 구축할 수 있다는 의미이지요.
